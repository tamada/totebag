#compdef totebag

autoload -U is-at-least

_totebag() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'-C+[Specify the base directory for archiving or extracting.]:DIR:_files' \
'--dir=[Specify the base directory for archiving or extracting.]:DIR:_files' \
'*-i+[Specify the ignore type.]:IGNORE_TYPES:((default\:"\[IgnoreType\:\:GitIgnore\], \[IgnoreType\:\:GitGlobal\], \[IgnoreType\:\:GitExclude\], and \[IgnoreType\:\:Ignore\]"
hidden\:"ignore hidden files and directories"
git-ignore\:"ignore files and directories that are listed in \`.gitignore\`"
git-global\:"ignore files and directories that are listed in \`.gitglobal\`"
git-exclude\:"ignore files and directories that are listed in \`.gitexclude\`"
ignore\:"ignore files and directories that are listed in \`.ignore\`"))' \
'*--ignore-types=[Specify the ignore type.]:IGNORE_TYPES:((default\:"\[IgnoreType\:\:GitIgnore\], \[IgnoreType\:\:GitGlobal\], \[IgnoreType\:\:GitExclude\], and \[IgnoreType\:\:Ignore\]"
hidden\:"ignore hidden files and directories"
git-ignore\:"ignore files and directories that are listed in \`.gitignore\`"
git-global\:"ignore files and directories that are listed in \`.gitglobal\`"
git-exclude\:"ignore files and directories that are listed in \`.gitexclude\`"
ignore\:"ignore files and directories that are listed in \`.ignore\`"))' \
'-L+[Specify the compression level. \[default\: 5\] \[possible values\: 0-9 (none to finest)\] For more details of level of each compression method, see README.]:LEVEL:_default' \
'--level=[Specify the compression level. \[default\: 5\] \[possible values\: 0-9 (none to finest)\] For more details of level of each compression method, see README.]:LEVEL:_default' \
'--log=[Specify the log level]:LOGLEVEL:((error\:"The error level"
warn\:"The warning level"
info\:"The info level"
debug\:"The debug level"
trace\:"The trace level"))' \
'-m+[Mode of operation.]:MODE:(auto archive extract list)' \
'--mode=[Mode of operation.]:MODE:(auto archive extract list)' \
'-o+[Output file in archive mode, or output directory in extraction mode]:DEST:_files' \
'--output=[Output file in archive mode, or output directory in extraction mode]:DEST:_files' \
'--to-archive-name-dir[extract files to DEST/ARCHIVE_NAME directory (extract mode).]' \
'-n[No recursive directory (archive mode).]' \
'--no-recursive[No recursive directory (archive mode).]' \
'-l[List entries in the archive file with long format.]' \
'--long[List entries in the archive file with long format.]' \
'--generate-completion[Generate the completion files]' \
'--overwrite[Overwrite existing files.]' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
'-V[Print version]' \
'--version[Print version]' \
'*::args -- List of files or directories to be processed.
'\''-'\'' reads form stdin, and '\''@<filename>'\'' reads from a file.
In archive mode, the resultant archive file name is determined by the following rule.
    - if output option is specified, use it.
    - if the first argument is the archive file name, use it.
    - otherwise, use the default name '\''totebag.zip'\''.
The format is determined by the extension of the resultant file name.:_default' \
&& ret=0
}

(( $+functions[_totebag_commands] )) ||
_totebag_commands() {
    local commands; commands=()
    _describe -t commands 'totebag commands' commands "$@"
}

if [ "$funcstack[1]" = "_totebag" ]; then
    _totebag "$@"
else
    compdef _totebag totebag
fi
