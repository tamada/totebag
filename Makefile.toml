[env]
VERSION = { script = [ "grep '^version = ' Cargo.toml | sed 's/version = \"\\(.*\\)\"/\\1/g'" ] }

[tasks.format]
install_crate = "rustfmt"
command = "cargo"
args = ["fmt", "--", "--emit=files"]

[tasks.clippy]
install_crate = "clippy"
command = "cargo"
args = ["clippy", "--", "-D", "warnings"]

[tasks.build]
command = "cargo"
args = ["build"]
dependencies = ["format", "clippy"]

[tasks.test]
command = "cargo"
args = ["llvm-cov", "--html"]

[tasks.generate-completion]
script = [
    "cargo run -- --generate-completion",
    "cp -r target/completions ./assets"
]

[tasks.start]
description = "Start the document server"
script = ["hugo -s site server"]

[tasks.site]
description = "Build the site document"
script = ["hugo -s site"]

[tasks.docker]
description = "Build the docker image for the current arch"
script = [
    "docker build -t ghcr.io/tamada/totebag:latest -t ghcr.io/tamada/totebag:${VERSION} ."
]

[tasks.docker_arm64]
script = [
    "docker build --platform linux/arm64/v8 -t ghcr.io/tamada/totebag:latest -t ghcr.io/tamada/totebag:${VERSION} ."
]

[tasks.docker_amd4]
script = [
    "docker build --platform linux/amd64 -t ghcr.io/tamada/totebag:latest -t ghcr.io/tamada/totebag:${VERSION} ."
]

[tasks.docker_buildx]
description = "Build the docker image for multi-arch"
script = [
    "docker buildx build --platform linux/arm64/v8,linux/amd64 --output=type=image,push=true -t ghcr.io/tamada/totebag:latest -t ghcr.io/tamada/totebag:${VERSION} ."
]
